{
    "version": "https://jsonfeed.org/version/1",
    "title": "花晨月夕的个人博客 • All posts by \"环境搭建\" category",
    "description": "花晨月夕的个人博客",
    "home_page_url": "https://hcyx233.github.io",
    "items": [
        {
            "id": "https://hcyx233.github.io/2023/03/21/Windows-node-js%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/",
            "url": "https://hcyx233.github.io/2023/03/21/Windows-node-js%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/",
            "title": "Windows node.js安装与配置",
            "date_published": "2023-03-21T08:47:01.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"windows-nodejs安装及环境配置\"><a class=\"markdownIt-Anchor\" href=\"#windows-nodejs安装及环境配置\">#</a> Windows node.js 安装及环境配置</h3>\n<h4 id=\"安装nodejs\"><a class=\"markdownIt-Anchor\" href=\"#安装nodejs\">#</a> 安装 node.js</h4>\n<p>1、下载安装包，可以下载 LTS 长期支持版</p>\n<p>2、安装组件，保持默认就好</p>\n<p>3、安装开发工具，开发工具可以等以后实际开发过程中安装，这里选择不勾选安装工具</p>\n<p><img src=\"https://gitee.com/hcyx233/typora_imgs/raw/master/imgs/20230321163054.png\" alt=\"img\"></p>\n<p>4、余下步骤默认就好</p>\n<h4 id=\"配置nodejs\"><a class=\"markdownIt-Anchor\" href=\"#配置nodejs\">#</a> 配置 node.js</h4>\n<p>1、移动到 node.js 安装目录下</p>\n<p>2、创建全局组件文件夹和缓存文件夹</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> node_global</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mkdir</span> node_cache</pre></td></tr></table></figure><p>3、设置 npm 全局包目录</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> prefix <span class=\"token string\">\"/path/to/node_global\"</span></pre></td></tr></table></figure><p>4、设置缓存目录</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> cache <span class=\"token string\">\"/path/to/node_cache\"</span></pre></td></tr></table></figure><p>5、将用户变量 (环境变量) Path 中的 npm 路径更换为刚才 <code>自定义的 node_global 全局包</code></p>\n<p>6、新建 <code>NODE_PATH</code>  环境变量</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>变量名: NODE_PATH</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>变量值: 自定义的 node_global 全局包路径 + <span class=\"token punctuation\">\\</span>node_modules</pre></td></tr></table></figure><p>7、在 Path 变量中新建</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>%NODE_PATH%</pre></td></tr></table></figure><p>8、添加国内镜像源</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npm.taobao.org</pre></td></tr></table></figure><p>也可以使用定义的 cnpm 命令行工具代替默认的 npm：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> cnpm <span class=\"token parameter variable\">--registry</span><span class=\"token operator\">=</span>https://registry.npmmirror.com</pre></td></tr></table></figure><p>参考博客：</p>\n<p><a href=\"https://timberkito.com/?p=145\">Windows 环境下安装与配置 Node.js | Timber_Blog (timberkito.com)</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/442215189\">node.js 安装及环境配置超详细教程【Windows 系统安装包方式】 - 知乎 (zhihu.com)</a></p>\n<p><a href=\"https://www.cnblogs.com/RioTian/p/17128654.html\">Windows 环境下安装与配置 Node.js - RioTian - 博客园 (cnblogs.com)</a></p>\n",
            "tags": [
                "原创"
            ]
        },
        {
            "id": "https://hcyx233.github.io/2023/03/18/Git%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/",
            "url": "https://hcyx233.github.io/2023/03/18/Git%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/",
            "title": "Git安装配置",
            "date_published": "2023-03-18T07:50:41.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"git安装配置\"><a class=\"markdownIt-Anchor\" href=\"#git安装配置\">#</a> Git 安装配置</h3>\n<h4 id=\"用户信息\"><a class=\"markdownIt-Anchor\" href=\"#用户信息\">#</a> 用户信息</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"xxx\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email xxx@xxx.com</pre></td></tr></table></figure><h4 id=\"添加远程库\"><a class=\"markdownIt-Anchor\" href=\"#添加远程库\">#</a> 添加远程库</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-keygen <span class=\"token parameter variable\">-t</span> rsa <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"xxx@xxx.com\"</span></pre></td></tr></table></figure><p>xxx@xxx.com 改为你在 Github 上注册的邮箱，之后会要求确认路径和输入密码，我们这里默认一路回车就行。</p>\n<p>成功的话会在～/.ssh 下生成一个 <code>id_rsa.pub</code> ，复制里面的 key。</p>\n<h4 id=\"github\"><a class=\"markdownIt-Anchor\" href=\"#github\">#</a> Github</h4>\n<p>Account=&gt;Settings=&gt; <code>SSH and GPG keys</code> =&gt;New SSH key</p>\n<h4 id=\"验证是否成功\"><a class=\"markdownIt-Anchor\" href=\"#验证是否成功\">#</a> 验证是否成功</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-T</span> git@github.com</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#成功的话，会输出如下信息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Hi xxx<span class=\"token operator\">!</span> You've successfully authenticated, but GitHub does not provide shell access. <span class=\"token comment\"># 成功信息</span></pre></td></tr></table></figure>",
            "tags": [
                "原创"
            ]
        },
        {
            "id": "https://hcyx233.github.io/2023/03/18/%E7%8E%AF%E5%A2%83/",
            "url": "https://hcyx233.github.io/2023/03/18/%E7%8E%AF%E5%A2%83/",
            "title": "环境",
            "date_published": "2023-03-18T04:12:51.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"kali修改镜像源\"><a class=\"markdownIt-Anchor\" href=\"#kali修改镜像源\">#</a> kali 修改镜像源</h3>\n<p>修改 /etc/apt/sources.list , 将相关 url 改成阿里云的源。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#deb https://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#deb-src https://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></pre></td></tr></table></figure><h3 id=\"centos7修改镜像源\"><a class=\"markdownIt-Anchor\" href=\"#centos7修改镜像源\">#</a> centos7 修改镜像源</h3>\n<ol>\n<li>\n<p>备份</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</pre></td></tr></table></figure></li>\n<li>\n<p>下载镜像源文件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</pre></td></tr></table></figure></li>\n<li>\n<p>运行  <code>yum makecache</code>  生成缓存</p>\n</li>\n</ol>\n<h3 id=\"mysql允许其他主机访问\"><a class=\"markdownIt-Anchor\" href=\"#mysql允许其他主机访问\">#</a> MySQL 允许其他主机访问</h3>\n<p>GRANT ALL ON <em>.</em> TO ‘root’@’%’ IDENTIFIED BY ‘rootpassword’ WITH GRANT OPTION;</p>\n<p>flush privileges;</p>\n<h3 id=\"run-time-error-339\"><a class=\"markdownIt-Anchor\" href=\"#run-time-error-339\">#</a> run-time error 339</h3>\n<p>regsvr32 xxx.ocx</p>\n<h3 id=\"java环境变量\"><a class=\"markdownIt-Anchor\" href=\"#java环境变量\">#</a> Java 环境变量</h3>\n<p>JAVA_HOME：/path/to/java</p>\n<p>Path：%JAVA_HOME%\\bin</p>\n<h3 id=\"tomcat环境变量配置\"><a class=\"markdownIt-Anchor\" href=\"#tomcat环境变量配置\">#</a> Tomcat 环境变量配置</h3>\n<p>tomcat 配置</p>\n<p>环境变量：</p>\n<p>CATALINA_HOME: /path/to/tomcat</p>\n<h3 id=\"tomcat9控制台中文乱码\"><a class=\"markdownIt-Anchor\" href=\"#tomcat9控制台中文乱码\">#</a> tomcat9 控制台中文乱码</h3>\n<p>conf-&gt;logging.properties-&gt;java.util.logging.ConsoleHandler.encoding = UTF-8 ==&gt; java.util.logging.ConsoleHandler.encoding = GBK</p>\n<h3 id=\"maven配置\"><a class=\"markdownIt-Anchor\" href=\"#maven配置\">#</a> maven 配置</h3>\n<h4 id=\"环境变量\"><a class=\"markdownIt-Anchor\" href=\"#环境变量\">#</a> 环境变量</h4>\n<p>MAVEN_HOME：/path/to/maven</p>\n<p>Path：%MAVEN_HOME%\\bin</p>\n<p>阿里云镜像源：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mirror</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>aliyunmaven<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mirrorOf</span><span class=\"token punctuation\">></span></span>*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mirrorOf</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>阿里云公共仓库<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">></span></span>https://maven.aliyun.com/repository/public<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mirror</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"git设置代理\"><a class=\"markdownIt-Anchor\" href=\"#git设置代理\">#</a> Git 设置代理</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#http/https 代理</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> http.proxy http://host:port</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> https.proxy https://host:port</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#socks 代理</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> http.proxy socks5://host:port</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> https.proxy socks5://host:port</pre></td></tr></table></figure><h3 id=\"git常用命令\"><a class=\"markdownIt-Anchor\" href=\"#git常用命令\">#</a> Git 常用命令</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token operator\">&lt;</span>file<span class=\"token operator\">></span> <span class=\"token comment\">#add file</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token operator\">&lt;</span>message<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>file<span class=\"token operator\">></span> <span class=\"token comment\">#commit file</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> reflog <span class=\"token comment\">#list versionids</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> <span class=\"token operator\">&lt;</span>versionid<span class=\"token operator\">></span> <span class=\"token comment\">#checkout version</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-v</span> <span class=\"token comment\">#list branches</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">git</span> branch <span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span> <span class=\"token comment\">#create branch</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">git</span> checkout <span class=\"token operator\">&lt;</span>branch-name<span class=\"token operator\">></span> <span class=\"token comment\">#checkout branch</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">git</span> merge <span class=\"token operator\">&lt;</span>branch-name<span class=\"token operator\">></span> <span class=\"token comment\">#merge branch</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token parameter variable\">-v</span> <span class=\"token comment\">#查看当前所有远程地址别名</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> 别名 远程地址 <span class=\"token comment\">#创建远程仓库别名</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">git</span> push 别名 分支 <span class=\"token comment\">#推送分支到远程库</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">git</span> pull 别名 分支 <span class=\"token comment\">#拉取</span></pre></td></tr></table></figure><h3 id=\"idea主题\"><a class=\"markdownIt-Anchor\" href=\"#idea主题\">#</a> idea 主题</h3>\n<h4 id=\"material-theme-ui\"><a class=\"markdownIt-Anchor\" href=\"#material-theme-ui\">#</a> material theme ui</h4>\n<h3 id=\"clion控制台乱码\"><a class=\"markdownIt-Anchor\" href=\"#clion控制台乱码\">#</a> clion 控制台乱码</h3>\n<p><a href=\"https://zhuanlan.zhihu.com/p/106747225\">Clion 中 的乱码问题正确解决方案（来自官方技术支持） - 知乎 (zhihu.com)</a></p>\n<h3 id=\"安装程序无法自动安装virtual-machine-communication-interface-socketsvsock驱动程序-必须手动安装此驱动程序\"><a class=\"markdownIt-Anchor\" href=\"#安装程序无法自动安装virtual-machine-communication-interface-socketsvsock驱动程序-必须手动安装此驱动程序\">#</a> 安装程序无法自动安装 Virtual Machine Communication Interface Sockets（VSock）驱动程序。必须手动安装此驱动程序</h3>\n<h4 id=\"安装如下两个补丁\"><a class=\"markdownIt-Anchor\" href=\"#安装如下两个补丁\">#</a> 安装如下两个补丁</h4>\n<p><a href=\"https://www.catalog.update.microsoft.com/search.aspx?q=4490628\">https://www.catalog.update.microsoft.com/search.aspx?q=4490628</a></p>\n<p><a href=\"https://www.catalog.update.microsoft.com/search.aspx?q=kb4474419\">https://www.catalog.update.microsoft.com/search.aspx?q=kb4474419</a></p>\n<h4 id=\"原因\"><a class=\"markdownIt-Anchor\" href=\"#原因\">#</a> 原因</h4>\n<p>VMware tools 的驱动签名算法是 sha-2，win7 老版本的驱动程序使用的是 sha-1，打上微软提供的 4490628 和 kb4474419 补丁就行了。</p>\n<h3 id=\"wsl磁盘迁移\"><a class=\"markdownIt-Anchor\" href=\"#wsl磁盘迁移\">#</a> wsl 磁盘迁移</h3>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl <span class=\"token operator\">-</span>l <span class=\"token operator\">-</span>v <span class=\"token comment\">#查看 wsl 下的 Linux 是否为关闭状态，当 wsl 为 Stopped 才能进行下一步。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>wsl <span class=\"token operator\">--</span>export yourdist location <span class=\"token comment\">#以压缩包的形式导出到其他盘。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>exam:wsl <span class=\"token operator\">--</span>export Ubuntu D:\\UbuntuWSL\\ubuntutar</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>wsl <span class=\"token operator\">--</span>unregister yourdist <span class=\"token comment\">#注销原有的 linux 系统</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>exam:wsl <span class=\"token operator\">--</span>unregister Ubuntu</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>wsl <span class=\"token operator\">--</span>import youdistname importlocation tar-location <span class=\"token operator\">--</span>version 2 <span class=\"token comment\">#wsl --import &lt; 导入的 Linux 名称 > &lt; 导入盘的路径 > &lt;ubuntu.tar 的路径 > --version 2 (代表 wsl2)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>exam: wsl <span class=\"token operator\">--</span>import Ubuntu D:\\UbuntuWSL\\ D:\\UbuntuWSL\\ubuntu<span class=\"token punctuation\">.</span>tar <span class=\"token operator\">--</span>version 2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>yourdistname<span class=\"token punctuation\">.</span>exe config <span class=\"token operator\">--</span>default-user username</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>exam:ubuntu<span class=\"token punctuation\">.</span>exe config <span class=\"token operator\">--</span>default-user xxx <span class=\"token comment\">#在导入任意盘 linux 系统时，我起名 Ubuntu，所以这里是 ubuntu.exe；如果你起的名字是 Ubuntu-20.04，那这里就是 ubuntu2004.exe；如果你起的名字是 ubuntu-18.04，那这里就是 ubuntu1804.exe。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># xxx 是原有 wsl ubuntu 的用户名称。</span></pre></td></tr></table></figure><h4 id=\"停止wsl子系统\"><a class=\"markdownIt-Anchor\" href=\"#停止wsl子系统\">#</a> 停止 wsl 子系统</h4>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl <span class=\"token operator\">--</span>shutdown</pre></td></tr></table></figure><p><img src=\"https://gitee.com/hcyx233/typora_imgs/raw/master/imgs/20230319093824.png\" alt=\"image-20230113104304905\"></p>\n<h4 id=\"wsl修改默认用户为非root用户\"><a class=\"markdownIt-Anchor\" href=\"#wsl修改默认用户为非root用户\">#</a> wsl 修改默认用户为非 root 用户</h4>\n<p>vim /etc/wsl.conf</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>default <span class=\"token operator\">=</span> xxx</pre></td></tr></table></figure><h3 id=\"fedora配置ssh服务\"><a class=\"markdownIt-Anchor\" href=\"#fedora配置ssh服务\">#</a> fedora 配置 ssh 服务</h3>\n<p>首先查看是否安装 openSSH, 通过命令：rpm -qa | grep openssh-server，如果有结果说明安装了，只需要配置一下就 ok。</p>\n<p>如果没有执行命令：yum install openssh-server</p>\n<p>配置一下，打开 /etc/ssh/ssh_config ，去掉其中：</p>\n<p>Port 22</p>\n<p>Protocol 2,1</p>\n<p>前面的 #号，然后重新启动：service sshd restart。</p>\n<p>最后需要设置一下防火墙，允许 ssh 端口被访问：</p>\n<p>iptables -I INPUT -p tcp --dport 22 -j ACCEPT</p>\n<p>然后就可以通过 ssh 工具连接了。</p>\n<h3 id=\"编程字体推荐\"><a class=\"markdownIt-Anchor\" href=\"#编程字体推荐\">#</a> 编程字体推荐</h3>\n<p><a href=\"https://blog.csdn.net/gaowencheng01/article/details/110295853\">推荐几款优秀的开源编程字体_北极狐 north 的博客 - CSDN 博客_编程字体</a></p>\n<h3 id=\"编程软件\"><a class=\"markdownIt-Anchor\" href=\"#编程软件\">#</a> 编程软件</h3>\n<h4 id=\"he3开发工具合集\"><a class=\"markdownIt-Anchor\" href=\"#he3开发工具合集\">#</a> He3–开发工具合集</h4>\n<h4 id=\"zeal文档合集\"><a class=\"markdownIt-Anchor\" href=\"#zeal文档合集\">#</a> zeal–文档合集</h4>\n<h4 id=\"drawio绘图\"><a class=\"markdownIt-Anchor\" href=\"#drawio绘图\">#</a> drawio–绘图</h4>\n<h4 id=\"navicat数据库管理软件\"><a class=\"markdownIt-Anchor\" href=\"#navicat数据库管理软件\">#</a> navicat–数据库管理软件</h4>\n<h4 id=\"sqlyog\"><a class=\"markdownIt-Anchor\" href=\"#sqlyog\">#</a> SQLyog</h4>\n<p>010editor–二进制文件编辑</p>\n<p>burpsuite–安全必备</p>\n",
            "tags": [
                "原创",
                "技术"
            ]
        }
    ]
}